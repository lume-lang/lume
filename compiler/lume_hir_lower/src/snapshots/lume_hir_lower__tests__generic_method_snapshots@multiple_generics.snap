---
source: compiler/lume_hir_lower/src/tests.rs
description: "impl Test { fn test<T1, T2>() -> void {} }"
---
Map {
    package: PackageId(
        0,
    ),
    items: {
        ItemId(
            10980377431797536133,
        ): Impl(
            Implementation {
                id: ItemId(
                    10980377431797536133,
                ),
                impl_id: None,
                target: Type {
                    id: ItemId(
                        16167930571419358001,
                    ),
                    name: SymbolName {
                        namespace: Some(
                            PathRoot {
                                segments: [],
                            },
                        ),
                        name: Named(
                            Identifier {
                                name: "Test",
                                location: <internal>:5:9,
                            },
                        ),
                        location: <internal>:5:9,
                    },
                    type_params: [],
                    location: <internal>:5:9,
                },
                methods: [
                    MethodDefinition {
                        method_id: None,
                        visibility: Private,
                        name: Identifier {
                            name: "test",
                            location: <internal>:15:19,
                        },
                        parameters: [],
                        type_parameters: [
                            TypeParameter {
                                name: Identifier {
                                    name: "T1",
                                    location: <internal>:20:22,
                                },
                                type_id: None,
                                type_param_id: None,
                                constraints: [],
                                location: <internal>:20:22,
                            },
                            TypeParameter {
                                name: Identifier {
                                    name: "T2",
                                    location: <internal>:24:26,
                                },
                                type_id: None,
                                type_param_id: None,
                                constraints: [],
                                location: <internal>:24:26,
                            },
                        ],
                        return_type: Some(
                            Type {
                                id: ItemId(
                                    2745571829241957363,
                                ),
                                name: SymbolName {
                                    namespace: Some(
                                        PathRoot {
                                            segments: [],
                                        },
                                    ),
                                    name: Named(
                                        Identifier {
                                            name: "void",
                                            location: <internal>:33:37,
                                        },
                                    ),
                                    location: <internal>:33:37,
                                },
                                type_params: [],
                                location: <internal>:33:37,
                            },
                        ),
                        block: Some(
                            Block {
                                statements: [],
                                location: <internal>:38:40,
                            },
                        ),
                        location: <internal>:12:40,
                    },
                ],
                type_parameters: [],
                location: <internal>:0:42,
            },
        ),
    },
    statements: {},
    expressions: {},
}
