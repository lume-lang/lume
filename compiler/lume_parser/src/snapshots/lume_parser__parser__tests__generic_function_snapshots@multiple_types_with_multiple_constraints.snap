---
source: compiler/lume_parser/src/parser.rs
expression: "parse(\"fn test<T1: Numeric + Floating, T2: Numeric + Floating>() -> void {}\")"
---
[
    FunctionDefinition(
        FunctionDefinition {
            visibility: Private(
                Private {
                    location: Location(
                        0..2,
                    ),
                },
            ),
            external: false,
            name: Identifier {
                name: "test",
                location: Location(
                    3..7,
                ),
            },
            parameters: [],
            type_parameters: [
                TypeParameter {
                    name: Identifier {
                        name: "T1",
                        location: Location(
                            8..10,
                        ),
                    },
                    constraints: [
                        Scalar(
                            ScalarType {
                                name: "Numeric",
                                location: Location(
                                    12..19,
                                ),
                            },
                        ),
                        Scalar(
                            ScalarType {
                                name: "Floating",
                                location: Location(
                                    22..30,
                                ),
                            },
                        ),
                    ],
                },
                TypeParameter {
                    name: Identifier {
                        name: "T2",
                        location: Location(
                            32..34,
                        ),
                    },
                    constraints: [
                        Scalar(
                            ScalarType {
                                name: "Numeric",
                                location: Location(
                                    36..43,
                                ),
                            },
                        ),
                        Scalar(
                            ScalarType {
                                name: "Floating",
                                location: Location(
                                    46..54,
                                ),
                            },
                        ),
                    ],
                },
            ],
            return_type: Scalar(
                ScalarType {
                    name: "void",
                    location: Location(
                        61..65,
                    ),
                },
            ),
            block: Block {
                statements: [],
                location: Location(
                    66..68,
                ),
            },
            location: Location(
                0..68,
            ),
        },
    ),
]
