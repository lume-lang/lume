---
source: compiler/lume_parser/src/tests.rs
expression: "parse(\"type A = B<C>\")"
---
[
    TypeDefinition(
        Alias(
            AliasDefinition {
                name: Identifier {
                    name: "A",
                    location: Location(
                        5..6,
                    ),
                },
                definition: Generic(
                    GenericType {
                        name: Path {
                            name: Identifier {
                                name: "B",
                                location: Location(
                                    9..10,
                                ),
                            },
                            root: NamespacePath {
                                path: [],
                                location: Location(
                                    0..0,
                                ),
                            },
                            location: Location(
                                9..10,
                            ),
                        },
                        type_params: [
                            Scalar(
                                ScalarType {
                                    name: Path {
                                        name: Identifier {
                                            name: "C",
                                            location: Location(
                                                11..12,
                                            ),
                                        },
                                        root: NamespacePath {
                                            path: [],
                                            location: Location(
                                                0..0,
                                            ),
                                        },
                                        location: Location(
                                            11..12,
                                        ),
                                    },
                                },
                            ),
                        ],
                        location: Location(
                            10..13,
                        ),
                    },
                ),
                location: Location(
                    0..13,
                ),
                documentation: None,
            },
        ),
    ),
]
