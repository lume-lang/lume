---
source: compiler/lume_hir_lower/src/tests.rs
description: "fn foo() -> RangeInclusive<Int32> { }"
---
Map {
    package: PackageId(
        0,
    ),
    items: {
        ItemId(
            17561646994490527473,
        ): Function(
            FunctionDefinition {
                id: ItemId(
                    17561646994490527473,
                ),
                func_id: None,
                visibility: Private,
                name: SymbolName {
                    namespace: None,
                    name: Named(
                        Identifier {
                            name: "foo",
                            location: <internal>:3:6,
                        },
                    ),
                    location: <internal>:3:6,
                },
                parameters: [],
                type_parameters: [],
                return_type: Some(
                    Type {
                        id: ItemId(
                            4420684641417064932,
                        ),
                        name: SymbolName {
                            namespace: Some(
                                PathRoot {
                                    segments: [
                                        Named(
                                            Identifier {
                                                name: "std",
                                                location: <internal>:0:0,
                                            },
                                        ),
                                    ],
                                },
                            ),
                            name: Named(
                                Identifier {
                                    name: "RangeInclusive",
                                    location: <internal>:0:0,
                                },
                            ),
                            location: <internal>:0:0,
                        },
                        type_params: [
                            Type {
                                id: ItemId(
                                    9261998375256972311,
                                ),
                                name: SymbolName {
                                    namespace: Some(
                                        PathRoot {
                                            segments: [
                                                Named(
                                                    Identifier {
                                                        name: "std",
                                                        location: <internal>:0:0,
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                    name: Named(
                                        Identifier {
                                            name: "Int32",
                                            location: <internal>:0:0,
                                        },
                                    ),
                                    location: <internal>:0:0,
                                },
                                type_params: [],
                                location: <internal>:27:32,
                            },
                        ],
                        location: <internal>:12:33,
                    },
                ),
                block: Some(
                    Block {
                        statements: [],
                        location: <internal>:34:37,
                    },
                ),
                location: <internal>:0:37,
            },
        ),
    },
    statements: {},
    expressions: {},
}
