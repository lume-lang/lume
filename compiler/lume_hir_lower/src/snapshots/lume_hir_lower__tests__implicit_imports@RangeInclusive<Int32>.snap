---
source: compiler/lume_hir_lower/src/tests.rs
description: "fn foo() -> RangeInclusive<Int32> { }"
---
Map {
    package: PackageId(
        0,
    ),
    items: {
        ItemId {
            package: PackageId(
                0,
            ),
            index: Idx(
                1,
            ),
        }: Function(
            FunctionDefinition {
                id: ItemId {
                    package: PackageId(
                        0,
                    ),
                    index: Idx(
                        1,
                    ),
                },
                func_id: None,
                visibility: Private,
                name: Path {
                    root: [],
                    name: Type {
                        name: Identifier {
                            name: "foo",
                            location: <internal>:3:6,
                        },
                        type_arguments: [],
                        location: <internal>:3:6,
                    },
                    location: <internal>:3:6,
                },
                parameters: [],
                type_parameters: TypeParameters {
                    inner: [],
                },
                return_type: Type {
                    id: ItemId {
                        package: PackageId(
                            0,
                        ),
                        index: Idx(
                            16107097090408334998,
                        ),
                    },
                    name: Path {
                        root: [
                            Namespace {
                                name: Identifier {
                                    name: "std",
                                    location: <internal>:0:0,
                                },
                            },
                        ],
                        name: Type {
                            name: Identifier {
                                name: "RangeInclusive",
                                location: <internal>:12:26,
                            },
                            type_arguments: [
                                Type {
                                    id: ItemId {
                                        package: PackageId(
                                            0,
                                        ),
                                        index: Idx(
                                            6143724420395906933,
                                        ),
                                    },
                                    name: Path {
                                        root: [
                                            Namespace {
                                                name: Identifier {
                                                    name: "std",
                                                    location: <internal>:0:0,
                                                },
                                            },
                                        ],
                                        name: Type {
                                            name: Identifier {
                                                name: "Int32",
                                                location: <internal>:27:32,
                                            },
                                            type_arguments: [],
                                            location: <internal>:27:32,
                                        },
                                        location: <internal>:27:32,
                                    },
                                    location: <internal>:27:32,
                                },
                            ],
                            location: <internal>:12:33,
                        },
                        location: <internal>:12:33,
                    },
                    location: <internal>:12:33,
                },
                block: Some(
                    Block {
                        statements: [],
                        location: <internal>:34:37,
                    },
                ),
                location: <internal>:0:37,
            },
        ),
    },
    statements: {},
    expressions: {},
}
