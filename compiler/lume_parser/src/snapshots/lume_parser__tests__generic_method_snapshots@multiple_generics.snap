---
source: compiler/lume_parser/src/tests.rs
expression: "parse(\"impl Test { fn test<T1, T2>() -> void {} }\")"
---
[
    Impl(
        Implementation {
            name: Named(
                NamedType {
                    name: Path {
                        root: [],
                        name: Type {
                            name: Identifier {
                                name: "Test",
                                location: Location(
                                    5..9,
                                ),
                            },
                            type_arguments: [],
                            location: Location(
                                5..9,
                            ),
                        },
                        location: Location(
                            5..9,
                        ),
                    },
                },
            ),
            methods: [
                MethodDefinition {
                    visibility: Private {
                        location: Location(
                            12..12,
                        ),
                    },
                    external: false,
                    name: Identifier {
                        name: "test",
                        location: Location(
                            15..19,
                        ),
                    },
                    parameters: [],
                    type_parameters: [
                        TypeParameter {
                            name: Identifier {
                                name: "T1",
                                location: Location(
                                    20..22,
                                ),
                            },
                            constraints: [],
                        },
                        TypeParameter {
                            name: Identifier {
                                name: "T2",
                                location: Location(
                                    24..26,
                                ),
                            },
                            constraints: [],
                        },
                    ],
                    return_type: Some(
                        Named(
                            NamedType {
                                name: Path {
                                    root: [],
                                    name: Type {
                                        name: Identifier {
                                            name: "void",
                                            location: Location(
                                                33..37,
                                            ),
                                        },
                                        type_arguments: [],
                                        location: Location(
                                            33..37,
                                        ),
                                    },
                                    location: Location(
                                        33..37,
                                    ),
                                },
                            },
                        ),
                    ),
                    block: Block {
                        statements: [],
                        location: Location(
                            38..40,
                        ),
                    },
                    location: Location(
                        12..40,
                    ),
                    documentation: None,
                },
            ],
            type_parameters: [],
            location: Location(
                0..42,
            ),
        },
    ),
]
